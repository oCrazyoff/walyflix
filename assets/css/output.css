/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-purple-700: oklch(49.6% 0.265 301.924);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xl: 36rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --animate-spin: spin 1s linear infinite;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-azul: #398FF9;
    --color-azul-hover: #095FC9;
    --color-azul-escuro: #18202B;
    --color-preto: #141414;
    --color-cinza: #1F1F1F;
    --color-cinza-claro: #2B2B2B;
    --color-branco-texto-opaco: #BFBFBF;
    --color-borda: #404040;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-\[1rem\] {
    top: 1rem;
  }
  .right-\[5\%\] {
    right: 5%;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-\[80\%\] {
    bottom: 80%;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-\[90\%\] {
    left: 90%;
  }
  .z-30 {
    z-index: 30;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .z-200 {
    z-index: 200;
  }
  .z-700 {
    z-index: 700;
  }
  .z-850 {
    z-index: 850;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .-mt-8 {
    margin-top: calc(var(--spacing) * -8);
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mr-5 {
    margin-right: calc(var(--spacing) * 5);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-15 {
    height: calc(var(--spacing) * 15);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-50 {
    height: calc(var(--spacing) * 50);
  }
  .h-75 {
    height: calc(var(--spacing) * 75);
  }
  .h-\[4\.5rem\] {
    height: 4.5rem;
  }
  .h-\[4rem\] {
    height: 4rem;
  }
  .h-\[5rem\] {
    height: 5rem;
  }
  .h-\[15rem\] {
    height: 15rem;
  }
  .h-\[calc\(100dvh-5rem\)\] {
    height: calc(100dvh - 5rem);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .min-h-dvh {
    min-height: 100dvh;
  }
  .min-h-full {
    min-height: 100%;
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-15 {
    width: calc(var(--spacing) * 15);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-50 {
    width: calc(var(--spacing) * 50);
  }
  .w-\[80\%\] {
    width: 80%;
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .w-xl {
    width: var(--container-xl);
  }
  .max-w-50 {
    max-width: calc(var(--spacing) * 50);
  }
  .max-w-full {
    max-width: 100%;
  }
  .min-w-full {
    min-width: 100%;
  }
  .-translate-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-90 {
    rotate: 90deg;
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .self-center {
    align-self: center;
  }
  .justify-self-center {
    justify-self: center;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }
  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-3 {
    border-top-style: var(--tw-border-style);
    border-top-width: 3px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-borda {
    border-color: var(--color-borda);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-t-azul {
    border-top-color: var(--color-azul);
  }
  .bg-azul {
    background-color: var(--color-azul);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/60 {
    background-color: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }
  .bg-black\/80 {
    background-color: color-mix(in srgb, #000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }
  .bg-cinza {
    background-color: var(--color-cinza);
  }
  .bg-cinza-claro {
    background-color: var(--color-cinza-claro);
  }
  .bg-cinza\/40 {
    background-color: color-mix(in srgb, #1F1F1F 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-cinza) 40%, transparent);
    }
  }
  .bg-cinza\/60 {
    background-color: color-mix(in srgb, #1F1F1F 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-cinza) 60%, transparent);
    }
  }
  .bg-cinza\/80 {
    background-color: color-mix(in srgb, #1F1F1F 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-cinza) 80%, transparent);
    }
  }
  .bg-preto\/50 {
    background-color: color-mix(in srgb, #141414 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-preto) 50%, transparent);
    }
  }
  .bg-purple-700 {
    background-color: var(--color-purple-700);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pb-15 {
    padding-bottom: calc(var(--spacing) * 15);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-9xl {
    font-size: var(--text-9xl);
    line-height: var(--tw-leading, var(--text-9xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-amber-500 {
    color: var(--color-amber-500);
  }
  .text-azul {
    color: var(--color-azul);
  }
  .text-branco-texto-opaco {
    color: var(--color-branco-texto-opaco);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .text-white\/90 {
    color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-azul {
    --tw-ring-color: var(--color-azul);
  }
  .backdrop-blur-lg {
    --tw-backdrop-blur: blur(var(--blur-lg));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .hover\:bg-azul-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-azul-hover);
      }
    }
  }
  .hover\:bg-borda {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-borda);
      }
    }
  }
  .hover\:bg-cinza {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cinza);
      }
    }
  }
  .hover\:bg-cinza-claro {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cinza-claro);
      }
    }
  }
  .hover\:text-azul {
    &:hover {
      @media (hover: hover) {
        color: var(--color-azul);
      }
    }
  }
  .hover\:ring {
    &:hover {
      @media (hover: hover) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:ring-2 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .lg\:top-\[0\.5rem\] {
    @media (width >= 64rem) {
      top: 0.5rem;
    }
  }
  .lg\:right-30 {
    @media (width >= 64rem) {
      right: calc(var(--spacing) * 30);
    }
  }
  .lg\:bottom-30 {
    @media (width >= 64rem) {
      bottom: calc(var(--spacing) * 30);
    }
  }
  .lg\:left-\[2rem\] {
    @media (width >= 64rem) {
      left: 2rem;
    }
  }
  .lg\:-mt-12 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * -12);
    }
  }
  .lg\:mt-8 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 8);
    }
  }
  .lg\:mt-10 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 10);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:h-80 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 80);
    }
  }
  .lg\:h-\[5rem\] {
    @media (width >= 64rem) {
      height: 5rem;
    }
  }
  .lg\:h-\[22rem\] {
    @media (width >= 64rem) {
      height: 22rem;
    }
  }
  .lg\:h-\[calc\(90dvh-5rem\)\] {
    @media (width >= 64rem) {
      height: calc(90dvh - 5rem);
    }
  }
  .lg\:h-\[calc\(100dvh-5rem\)\] {
    @media (width >= 64rem) {
      height: calc(100dvh - 5rem);
    }
  }
  .lg\:w-1\/2 {
    @media (width >= 64rem) {
      width: calc(1/2 * 100%);
    }
  }
  .lg\:w-2\/3 {
    @media (width >= 64rem) {
      width: calc(2/3 * 100%);
    }
  }
  .lg\:w-3\/5 {
    @media (width >= 64rem) {
      width: calc(3/5 * 100%);
    }
  }
  .lg\:w-30 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 30);
    }
  }
  .lg\:w-auto {
    @media (width >= 64rem) {
      width: auto;
    }
  }
  .lg\:w-max {
    @media (width >= 64rem) {
      width: max-content;
    }
  }
  .lg\:max-w-1\/2 {
    @media (width >= 64rem) {
      max-width: calc(1/2 * 100%);
    }
  }
  .lg\:rotate-0 {
    @media (width >= 64rem) {
      rotate: 0deg;
    }
  }
  .lg\:grid-cols-5 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:justify-between {
    @media (width >= 64rem) {
      justify-content: space-between;
    }
  }
  .lg\:gap-5 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 5);
    }
  }
  .lg\:p-3 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .lg\:p-4 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 4);
    }
  }
  .lg\:p-5 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 5);
    }
  }
  .lg\:px-5 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 5);
    }
  }
  .lg\:px-10 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .lg\:px-20 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 20);
    }
  }
  .lg\:pb-0 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .lg\:text-2xl {
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\:text-3xl {
    @media (width >= 64rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-6xl {
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:text-7xl {
    @media (width >= 64rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .lg\:text-xl {
    @media (width >= 64rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
}
@layer components {
  .container-vantagens {
    margin-block: calc(var(--spacing) * 10);
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    gap: calc(var(--spacing) * 5);
    @media (width >= 64rem) {
      margin-block: calc(var(--spacing) * 0);
    }
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 10);
    }
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    & article {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: calc(var(--spacing) * 3);
      text-align: center;
      & i {
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: calc(infinity * 1px);
        background-color: var(--color-azul-escuro);
        padding: calc(var(--spacing) * 4);
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
        color: var(--color-azul);
      }
      & h2 {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
      }
      & p {
        color: var(--color-branco-texto-opaco);
      }
    }
  }
}
@layer components {
  .container-form {
    display: flex;
    height: 100dvh;
    width: 100%;
    align-items: center;
    justify-content: center;
    padding-inline: calc(var(--spacing) * 5);
    & form {
      display: flex;
      width: 100%;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      @media (width >= 64rem) {
        width: calc(1/3 * 100%);
      }
      & .input-group {
        margin-top: calc(var(--spacing) * 3);
        display: flex;
        width: 100%;
        flex-direction: column;
        gap: calc(var(--spacing) * 2);
        & input {
          border-radius: var(--radius-md);
          border-style: var(--tw-border-style);
          border-width: 2px;
          border-color: var(--color-borda);
          padding: calc(var(--spacing) * 2);
          &::placeholder {
            opacity: 90%;
          }
        }
      }
      & .btn-enviar {
        margin-top: calc(var(--spacing) * 4);
        width: 100%;
        cursor: pointer;
        border-radius: var(--radius-lg);
        background-color: var(--color-azul);
        padding-block: calc(var(--spacing) * 2);
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-azul-hover);
          }
        }
      }
      & .container-links {
        margin-top: calc(var(--spacing) * 4);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: color-mix(in srgb, #fff 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
        & p {
          & a {
            color: var(--color-azul);
            &:hover {
              @media (hover: hover) {
                color: var(--color-azul-hover);
              }
            }
          }
        }
        & a {
          &:hover {
            @media (hover: hover) {
              color: var(--color-azul);
            }
          }
        }
      }
    }
  }
}
@layer components {
  .container-table-titulo {
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-borda);
    background-color: var(--color-cinza-claro);
    padding: calc(var(--spacing) * 5);
    & h3 {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
    & p {
      color: var(--color-branco-texto-opaco);
    }
    & .container-table {
      margin-top: calc(var(--spacing) * 3);
      width: 100%;
      overflow: auto;
      border-radius: var(--radius-lg);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-borda);
      & table {
        width: 100%;
        & thead th {
          border-bottom-style: var(--tw-border-style);
          border-bottom-width: 1px;
          border-color: var(--color-borda);
          padding: calc(var(--spacing) * 3);
          text-align: center;
          --tw-font-weight: var(--font-weight-bold);
          font-weight: var(--font-weight-bold);
        }
        & tbody tr {
          border-bottom-style: var(--tw-border-style);
          border-bottom-width: 1px;
          border-color: var(--color-borda);
          &:last-child {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 0px;
          }
          &:hover {
            @media (hover: hover) {
              background-color: var(--color-cinza);
            }
          }
        }
        & tbody td {
          padding: calc(var(--spacing) * 5);
          text-align: center;
          & .capa {
            max-width: calc(var(--spacing) * 20);
            border-radius: var(--radius-sm);
          }
          & #catalogo {
            width: 100%;
            border-radius: calc(infinity * 1px);
            border-style: var(--tw-border-style);
            border-width: 1px;
            border-color: var(--color-borda);
            padding-inline: calc(var(--spacing) * 3);
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
          }
          & #destaque {
            width: max-content;
            border-radius: calc(infinity * 1px);
            background-color: var(--color-amber-500);
            padding-inline: calc(var(--spacing) * 3);
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
            --tw-font-weight: var(--font-weight-bold);
            font-weight: var(--font-weight-bold);
            color: var(--color-white);
          }
        }
        & .container-acoes {
          display: flex;
          width: 100%;
          align-items: center;
          justify-content: center;
          gap: calc(var(--spacing) * 1);
          font-size: var(--text-lg);
          line-height: var(--tw-leading, var(--text-lg--line-height));
          & a, form, button {
            display: flex;
            height: calc(var(--spacing) * 10);
            width: calc(var(--spacing) * 10);
            cursor: pointer;
            align-items: center;
            justify-content: center;
            border-radius: var(--radius-md);
            padding: calc(var(--spacing) * 3);
            &:hover {
              @media (hover: hover) {
                background-color: var(--color-borda);
              }
            }
          }
          & .deletar {
            color: var(--color-red-600);
          }
        }
      }
    }
  }
}
@layer components {
  #modal {
    width: 100%;
    & #div-form {
      max-width: 90vw;
      & #modal-form {
        max-height: 80dvh;
        overflow: auto;
        padding-inline: calc(var(--spacing) * 1);
        & label {
          margin-top: calc(var(--spacing) * 3);
          display: inline-block;
        }
      }
      & .input-modal {
        width: 100%;
        border-radius: var(--radius-lg);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-borda);
        padding: calc(var(--spacing) * 2);
      }
      & textarea.input-modal {
        min-height: calc(var(--spacing) * 15);
      }
      & .input-modal option {
        background-color: var(--color-cinza);
      }
    }
  }
}
@layer components {
  .container-categorias {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    gap: calc(var(--spacing) * 5);
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    & .item-categoria {
      border-radius: var(--radius-lg);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-borda);
      background-color: var(--color-cinza-claro);
      padding: calc(var(--spacing) * 5);
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 105%;
          --tw-scale-y: 105%;
          --tw-scale-z: 105%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
      & .txt {
        display: flex;
        align-items: center;
        justify-content: space-between;
        & h3 {
          font-size: var(--text-2xl);
          line-height: var(--tw-leading, var(--text-2xl--line-height));
          --tw-font-weight: var(--font-weight-bold);
          font-weight: var(--font-weight-bold);
        }
        & .container-acoes {
          display: flex;
          width: max-content;
          gap: calc(var(--spacing) * 3);
          font-size: var(--text-lg);
          line-height: var(--tw-leading, var(--text-lg--line-height));
          & a, form, button {
            display: flex;
            height: calc(var(--spacing) * 10);
            width: calc(var(--spacing) * 10);
            cursor: pointer;
            align-items: center;
            justify-content: center;
            border-radius: var(--radius-md);
            padding: calc(var(--spacing) * 3);
            &:hover {
              @media (hover: hover) {
                background-color: var(--color-borda);
              }
            }
          }
          & .deletar {
            color: var(--color-red-600);
          }
        }
      }
    }
  }
}
@layer components {
  .section-destaque {
    position: relative;
    height: 75dvh;
    width: 100%;
    overflow: hidden;
    & .container-info-destaque {
      position: absolute;
      bottom: calc(var(--spacing) * 20);
      left: calc(var(--spacing) * 0);
      z-index: 500;
      display: flex;
      width: 100%;
      flex-direction: column;
      gap: calc(var(--spacing) * 3);
      padding-inline: calc(var(--spacing) * 5);
      @media (width >= 64rem) {
        width: calc(3/5 * 100%);
      }
      @media (width >= 64rem) {
        padding-inline: calc(var(--spacing) * 20);
      }
      & .titulo-destaque {
        text-align: center;
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
        --tw-text-shadow-alpha: 30%;
        text-shadow: 0px 1px 2px var(--tw-text-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 30%)), 0px 3px 2px var(--tw-text-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 30%)), 0px 4px 8px var(--tw-text-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 30%));
        @media (width >= 64rem) {
          text-align: left;
        }
        @media (width >= 64rem) {
          font-size: var(--text-6xl);
          line-height: var(--tw-leading, var(--text-6xl--line-height));
        }
      }
      & .descricao-destaque {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 3;
        text-align: justify;
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
        --tw-text-shadow-alpha: 30%;
        text-shadow: 0px 1px 2px var(--tw-text-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 30%)), 0px 3px 2px var(--tw-text-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 30%)), 0px 4px 8px var(--tw-text-shadow-color, oklab(from rgb(0 0 0 / 0.1) l a b / 30%));
        @media (width >= 64rem) {
          text-align: left;
        }
        @media (width >= 64rem) {
          font-size: var(--text-2xl);
          line-height: var(--tw-leading, var(--text-2xl--line-height));
        }
      }
      & p {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: calc(var(--spacing) * 2);
        color: var(--color-white);
        @media (width >= 64rem) {
          display: block;
        }
        & .span-categoria-ano {
          color: var(--color-azul);
        }
      }
      .container-btn-destaque {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: calc(var(--spacing) * 3);
        @media (width >= 64rem) {
          justify-content: flex-start;
        }
        & .btn-assistir {
          display: flex;
          width: calc(1/2 * 100%);
          align-items: center;
          justify-content: center;
          gap: calc(var(--spacing) * 2);
          border-radius: var(--radius-lg);
          background-color: var(--color-white);
          padding-inline: calc(var(--spacing) * 5);
          padding-block: calc(var(--spacing) * 1);
          font-size: var(--text-2xl);
          line-height: var(--tw-leading, var(--text-2xl--line-height));
          color: var(--color-black);
          &:hover {
            @media (hover: hover) {
              background-color: color-mix(in srgb, #fff 80%, transparent);
              @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
              }
            }
          }
          @media (width >= 64rem) {
            width: calc(var(--spacing) * 50);
          }
          @media (width >= 64rem) {
            width: auto;
          }
          @media (width >= 64rem) {
            padding-inline: calc(var(--spacing) * 15);
          }
          @media (width >= 64rem) {
            padding-block: calc(var(--spacing) * 2);
          }
        }
        & .btn-minha-lista {
          display: flex;
          height: calc(var(--spacing) * 12);
          width: calc(var(--spacing) * 12);
          cursor: pointer;
          align-items: center;
          justify-content: center;
          border-radius: calc(infinity * 1px);
          border-style: var(--tw-border-style);
          border-width: 3px;
          border-color: var(--color-borda);
          background-color: color-mix(in srgb, #2B2B2B 70%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-cinza-claro) 70%, transparent);
          }
          font-size: var(--text-3xl);
          line-height: var(--tw-leading, var(--text-3xl--line-height));
          &:hover {
            @media (hover: hover) {
              border-color: var(--color-white);
            }
          }
          &:hover {
            @media (hover: hover) {
              background-color: color-mix(in srgb, #2B2B2B 40%, transparent);
              @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-cinza-claro) 40%, transparent);
              }
            }
          }
          @media (width >= 64rem) {
            height: calc(var(--spacing) * 12);
          }
          @media (width >= 64rem) {
            width: calc(var(--spacing) * 12);
          }
        }
        & .form-minha-lista-info {
          width: calc(1/2 * 100%);
          & .btn-minha-lista-info {
            display: flex;
            width: 100%;
            cursor: pointer;
            align-items: center;
            justify-content: center;
            gap: calc(var(--spacing) * 2);
            border-radius: var(--radius-lg);
            border-style: var(--tw-border-style);
            border-width: 3px;
            border-color: var(--color-borda);
            background-color: color-mix(in srgb, #2B2B2B 70%, transparent);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-cinza-claro) 70%, transparent);
            }
            padding-inline: calc(var(--spacing) * 3);
            padding-block: calc(var(--spacing) * 1);
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
            color: var(--color-branco-texto-opaco);
            &:hover {
              @media (hover: hover) {
                border-color: var(--color-white);
              }
            }
            &:hover {
              @media (hover: hover) {
                background-color: color-mix(in srgb, #2B2B2B 40%, transparent);
                @supports (color: color-mix(in lab, red, red)) {
                  background-color: color-mix(in oklab, var(--color-cinza-claro) 40%, transparent);
                }
              }
            }
            @media (width >= 64rem) {
              width: max-content;
            }
            @media (width >= 64rem) {
              padding-block: calc(var(--spacing) * 2);
            }
          }
        }
      }
    }
    .sombra-destaque {
      position: absolute;
      bottom: calc(var(--spacing) * 0);
      left: calc(var(--spacing) * 0);
      z-index: 250;
      height: calc(var(--spacing) * 32);
      width: 100%;
      --tw-gradient-position: to top in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
      --tw-gradient-from: rgb(20,20,20);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      --tw-gradient-to: transparent;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
    .sombra-preto-destaque {
      position: absolute;
      bottom: calc(var(--spacing) * 0);
      left: calc(var(--spacing) * 0);
      height: calc(1/2 * 100%);
      width: 100%;
      --tw-shadow: inset 0 -200px 100px -100px var(--tw-shadow-color, rgb(0,0,0)), inset 0 -200px 100px -100px var(--tw-shadow-color, rgb(0,0,0));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  #video-destaque {
    height: 80dvh;
    width: 100%;
    object-fit: cover;
    opacity: 80%;
  }
  .capa-info {
    z-index: 200;
    height: 100% !important;
    width: 100% !important;
    object-fit: cover;
    --tw-brightness: brightness(50%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
}
@media screen and (max-width: 360px) {
  .btn-minha-lista-info p {
    display: none;
  }
}
@layer components {
  .interface-perfil {
    display: flex;
    width: 100%;
    align-items: center;
    justify-content: center;
    & .input-group {
      display: flex;
      height: calc(1/2 * 100%);
      width: 100%;
      flex-direction: column;
      gap: calc(var(--spacing) * 1);
      & label {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
        color: var(--color-branco-texto-opaco);
      }
      & input {
        height: 100%;
        width: 100%;
        border-radius: var(--radius-lg);
        border-style: var(--tw-border-style);
        border-width: 1px;
        border-color: var(--color-borda);
        padding-inline: calc(var(--spacing) * 3);
        padding-block: calc(var(--spacing) * 1);
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
        @media (width >= 64rem) {
          padding-inline: calc(var(--spacing) * 10);
        }
        @media (width >= 64rem) {
          padding-block: calc(var(--spacing) * 2);
        }
      }
    }
    & .input-senha {
      margin-block: calc(var(--spacing) * 2);
      width: 100%;
      border-radius: var(--radius-lg);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-borda);
      padding-inline: calc(var(--spacing) * 5);
      padding-block: calc(var(--spacing) * 1);
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
      @media (width >= 64rem) {
        padding-block: calc(var(--spacing) * 2);
      }
    }
    & .btn-enviar-perfil {
      width: 100%;
      cursor: pointer;
      border-radius: var(--radius-lg);
      background-color: var(--color-azul);
      padding: calc(var(--spacing) * 1);
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-azul-hover);
        }
      }
      @media (width >= 64rem) {
        padding: calc(var(--spacing) * 2);
      }
      @media (width >= 64rem) {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
      }
    }
    & .btn-deslogar {
      width: 100%;
      border-radius: var(--radius-lg);
      background-color: var(--color-red-500);
      padding: calc(var(--spacing) * 1);
      text-align: center;
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-red-700);
        }
      }
      @media (width >= 64rem) {
        padding: calc(var(--spacing) * 2);
      }
      @media (width >= 64rem) {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
      }
    }
  }
  .foto-perfil-carrossel {
    height: calc(var(--spacing) * 25);
    width: calc(var(--spacing) * 25);
    cursor: pointer;
    border-radius: var(--radius-lg);
    object-fit: cover;
    padding: calc(var(--spacing) * 1);
    &:hover {
      @media (hover: hover) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 35);
    }
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 35);
    }
  }
}
@layer components {
  .container-cards {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    gap: calc(var(--spacing) * 3);
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
    & .card {
      display: flex;
      flex-direction: column;
      gap: calc(var(--spacing) * 3);
      border-radius: var(--radius-lg);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-borda);
      background-color: var(--color-cinza-claro);
      padding: calc(var(--spacing) * 5);
      & h3 {
        display: flex;
        align-items: center;
        justify-content: space-between;
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        color: var(--color-branco-texto-opaco);
        & i {
          font-size: var(--text-3xl);
          line-height: var(--tw-leading, var(--text-3xl--line-height));
          color: var(--color-azul);
        }
      }
      & span {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
      }
    }
  }
  .container-graficos {
    margin-top: calc(var(--spacing) * 5);
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    gap: calc(var(--spacing) * 3);
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    & .grafico {
      display: flex;
      flex-direction: column;
      gap: calc(var(--spacing) * 3);
      border-radius: var(--radius-lg);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-borda);
      background-color: var(--color-cinza-claro);
      padding: calc(var(--spacing) * 5);
      & h3 {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
        & i {
          color: var(--color-azul);
        }
      }
      & p {
        color: var(--color-branco-texto-opaco);
      }
    }
  }
}
@layer components {
  .filmes-container {
    position: relative;
    max-width: 100%;
  }
  .container-filmes {
    display: flex;
    gap: calc(var(--spacing) * 1);
    overflow-x: auto;
    overflow-y: hidden;
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 3);
    }
    @media (min-width: 1024px) {
      scrollbar-width: none;
      -ms-overflow-style: none;
    }
  }
  .container-filmes::-webkit-scrollbar {
    display: none;
  }
  .link-filme {
    padding: calc(var(--spacing) * 1);
    & img {
      height: 12rem;
      min-width: 9rem;
      border-radius: var(--radius-lg);
      object-fit: cover;
      padding: calc(var(--spacing) * 1);
      &:hover {
        @media (hover: hover) {
          --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
      @media (width >= 64rem) {
        height: 22rem;
      }
      @media (width >= 64rem) {
        min-width: 15rem;
      }
    }
  }
  .scroll-btn {
    position: absolute;
    top: calc(1/2 * 100%);
    z-index: 10;
    height: calc(var(--spacing) * 12);
    width: calc(var(--spacing) * 12);
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    cursor: pointer;
    border-radius: calc(infinity * 1px);
    background-color: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    color: var(--color-white);
    opacity: 0%;
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:hover {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    }
  }
  .filmes-container:hover .scroll-btn {
    opacity: 100%;
  }
  .scroll-left {
    left: calc(var(--spacing) * 2);
  }
  .scroll-right {
    right: calc(var(--spacing) * 2);
  }
  .container-top-10 {
    display: flex;
    & .posicao-top-10 {
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 8rem;
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
      --tw-tracking: -2rem;
      letter-spacing: -2rem;
      color: var(--color-preto);
      @media (width >= 64rem) {
        font-size: 18rem;
      }
      @media (width >= 64rem) {
        --tw-tracking: -4.5rem;
        letter-spacing: -4.5rem;
      }
    }
    & .link-filme img {
      &:hover {
        @media (hover: hover) {
          --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
    &:hover .posicao-top-10 {
      color: var(--color-azul);
    }
  }
  .continue-container {
    display: flex;
    gap: calc(var(--spacing) * 2);
    overflow: auto;
    @media (width >= 64rem) {
      display: grid;
    }
    @media (width >= 64rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
    & a {
      position: relative;
      padding: calc(var(--spacing) * 1);
      & img {
        height: 8rem;
        min-width: 12rem;
        border-radius: var(--radius-lg);
        object-fit: cover;
        padding: calc(var(--spacing) * 1);
        &:hover {
          @media (hover: hover) {
            --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
          }
        }
        @media (width >= 64rem) {
          height: 13rem;
        }
        @media (width >= 64rem) {
          width: 100%;
        }
      }
      & .btn-play {
        position: absolute;
        bottom: calc(var(--spacing) * 3);
        left: calc(var(--spacing) * 3);
        display: flex;
        max-width: calc(5/6 * 100%);
        align-items: center;
        justify-content: center;
        gap: calc(var(--spacing) * 2);
        border-radius: var(--radius-xl);
        background-color: color-mix(in srgb, #000 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 70%, transparent);
        }
        padding-inline: calc(var(--spacing) * 3);
        @media (width >= 64rem) {
          bottom: calc(var(--spacing) * 5);
        }
        @media (width >= 64rem) {
          left: calc(var(--spacing) * 5);
        }
        @media (width >= 64rem) {
          padding-inline: calc(var(--spacing) * 5);
        }
        & i {
          font-size: var(--text-2xl);
          line-height: var(--tw-leading, var(--text-2xl--line-height));
          @media (width >= 64rem) {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading, var(--text-5xl--line-height));
          }
        }
        & p {
          width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
      }
    }
  }
}
@layer utilities {
  .text-outline {
    text-shadow: -3px -3px 0 #398FF9, 3px -3px 0 #398FF9, -3px 3px 0 #398FF9, 3px 3px 0 #398FF9, -3px 0 0 #398FF9, 3px 0 0 #398FF9, 0 -3px 0 #398FF9, 0 3px 0 #398FF9;
  }
}
@layer components {
  .assistir-filme {
    position: absolute;
    top: calc(1/2 * 100%);
    left: calc(1/2 * 100%);
    height: 100vw;
    max-height: none;
    width: 100dvh;
    max-width: none;
    transform-origin: center;
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    rotate: 90deg;
    object-fit: contain;
    @media (width >= 64rem) {
      height: 100dvh;
    }
    @media (width >= 64rem) {
      width: 100dvw;
    }
    @media (width >= 64rem) {
      rotate: 0deg;
    }
  }
}
@layer utilities {
  .assistir-filme:fullscreen {
    height: 100%;
    width: 100%;
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    rotate: 0deg;
    object-fit: contain;
  }
}
@layer base {
  * {
    transition: background-color 0.3s ease, color 0.1s ease, opacity 0.3s ease, scale 0.2s ease, box-shadow 0.3s ease;
  }
  body {
    background-color: var(--color-preto);
    color: var(--color-white);
  }
  main {
    min-height: calc(100dvh - 5rem);
    padding-bottom: 5.5rem;
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 5);
    }
  }
}
@layer components {
  .interface {
    margin-inline: auto;
    width: 100%;
    max-width: 1280px;
    padding-inline: calc(var(--spacing) * 3);
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 5);
    }
  }
  .logo {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    & span {
      color: var(--color-azul);
    }
  }
  #div-erro {
    position: fixed;
    right: calc(var(--spacing) * 8);
    bottom: -50%;
    z-index: 750;
    display: flex;
    animation: show-mobile 5s;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 4);
    border-radius: var(--radius-xl);
    background-color: var(--color-white);
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-black);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    @media (width >= 64rem) {
      animation: show 5s;
    }
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    & i {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
      @media (width >= 64rem) {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
      }
    }
  }
  @keyframes show {
    0% {
      bottom: -50%;
    }
    20% {
      bottom: 2rem;
    }
    80% {
      bottom: 2rem;
    }
    100% {
      bottom: -50%;
    }
  }
  @keyframes show-mobile {
    0% {
      bottom: 80%;
      right: -100%;
    }
    20% {
      bottom: 80%;
      right: 1rem;
    }
    80% {
      bottom: 80%;
      right: 1rem;
    }
    100% {
      bottom: 80%;
      right: -100%;
    }
  }
  .titulo {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-top: calc(var(--spacing) * 10);
    padding-bottom: calc(var(--spacing) * 5);
    & .txt-titulo {
      & h2 {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
        @media (width >= 64rem) {
          font-size: var(--text-3xl);
          line-height: var(--tw-leading, var(--text-3xl--line-height));
        }
        & i {
          color: var(--color-azul);
        }
      }
      & p {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
        color: var(--color-branco-texto-opaco);
        @media (width >= 64rem) {
          font-size: var(--text-xl);
          line-height: var(--tw-leading, var(--text-xl--line-height));
        }
      }
    }
    & button {
      margin-left: calc(var(--spacing) * 5);
      display: flex;
      min-height: calc(var(--spacing) * 13);
      min-width: calc(var(--spacing) * 13);
      cursor: pointer;
      align-items: center;
      justify-content: center;
      gap: calc(var(--spacing) * 2);
      border-radius: var(--radius-lg);
      background-color: var(--color-azul);
      padding: calc(var(--spacing) * 0);
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-azul-hover);
        }
      }
      @media (width >= 64rem) {
        margin-left: calc(var(--spacing) * 0);
      }
      @media (width >= 64rem) {
        height: auto;
      }
      @media (width >= 64rem) {
        width: auto;
      }
      @media (width >= 64rem) {
        padding-inline: calc(var(--spacing) * 5);
      }
      @media (width >= 64rem) {
        padding-block: calc(var(--spacing) * 2);
      }
      @media (width >= 64rem) {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
      }
      & span {
        display: none;
        @media (width >= 64rem) {
          display: block;
        }
      }
    }
  }
  .link-menu {
    display: flex;
    width: 100%;
    flex-direction: column;
    text-align: center;
    white-space: nowrap;
    color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-branco-texto-opaco);
      }
    }
    @media (width >= 64rem) {
      flex-direction: row;
    }
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .ativo {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
    border-color: var(--color-white);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-text-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-text-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-text-shadow-color: initial;
      --tw-text-shadow-alpha: 100%;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-tracking: initial;
    }
  }
}
